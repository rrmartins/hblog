<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Backend on Rodrigo Martins </title>
      <generator uri="https://gohugo.io">Hugo</generator>
    <link>http://rodij.me/categories/backend/</link>
    <language>en-us</language>
    
    <copyright>I&#39;m a Catholic Christian, software developer, passionate about life, codes, questions, theories and theorems. :)</copyright>
    <updated>Mon, 30 Apr 2012 00:00:00 UTC</updated>
    
    <item>
      <title>desenvolvendo um chat com nodejs</title>
      <link>http://rodij.me/post/2012/04/30/desenvolvendo-um-chat-com-nodejs/</link>
      <pubDate>Mon, 30 Apr 2012 00:00:00 UTC</pubDate>
      
      <guid>http://rodij.me/post/2012/04/30/desenvolvendo-um-chat-com-nodejs/</guid>
      <description>&lt;p&gt;Olá Developers&amp;hellip;&lt;/p&gt;

&lt;p&gt;Vamos desenvolver um pequeno Chat em NodeJS&amp;hellip; Estou começando com os estudos de NodeJS tambem, e tem sido de grande valia para mim&amp;hellip;&lt;/p&gt;

&lt;p&gt;Então, antes de mais nada, vamos fazer o download do NodeJS no link &lt;a href=&#34;http://nodejs.org/#download&#34;&gt;nodejs.org&lt;/a&gt;, ou podemos instalar com o &lt;a href=&#34;https://github.com/joyent/node/wiki/Installing-Node.js-via-package-manager&#34;&gt;Node Package Manager (npm)&lt;/a&gt;. Eu estou usando o npm, e indico a todos&amp;hellip; :D&lt;/p&gt;

&lt;p&gt;Vamos criar a aplicação, crie uma pasta com o nome da aplicação:&lt;/p&gt;

&lt;p&gt;{% codeblock Criando Pasta %}
mkdir app_chat
{% endcodeblock %}&lt;/p&gt;

&lt;p&gt;Agora vamos entrar na pasta do projeto, e criar o arquivo que será nosso servidor, nome exemplo: heloword_server.js.&lt;/p&gt;

&lt;p&gt;Hora de começar a brincar com o servidor.&lt;/p&gt;

&lt;p&gt;``` javascript Criando o server
var fs = require(&amp;lsquo;fs&amp;rsquo;);
var server = require(&amp;lsquo;http&amp;rsquo;).createServer(function(req, response){
  fs.readFile(&amp;lsquo;helloworld.html&amp;rsquo;, function(err, data){
    response.writeHead(200, {&amp;lsquo;Content-Type&amp;rsquo;:&amp;lsquo;text/html&amp;rsquo;});
    response.write(data);
    response.end();
  });
});&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
Na linha 1, temos um require(&#39;fs&#39;), este é um framework do nodejs, que serve para trabalhar com arquivos.

Na linha 2, estamos instanciando e criando o server &#39;http&#39;.

Na linha 3, já dentro da função do createServer, temos a leitura do arquivo que será alimentado, e uma criação de função.

Na linha 4, estamos escrevendo o arquivo, lembrando que ele será do tipo HTML.

Na linha 5, temos a escrita no arquivo. E abaixo finalizamos.

Este processo de leitura do arquivo, ocorre sempre que alguem entra na aplicação.

Vamos continuar, agora vamos colocar uma porta para o servidor.

``` javascript Criando uma porta e aplicando ao server
var port = process.env.PORT || 3000;

server.listen(port, function() {
  console.log(&amp;quot;Listening on &amp;quot; + port);
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Neste exemplo acima, pegamos o número da porta do processo, ou fica valendo a porta 3000.&lt;/p&gt;

&lt;p&gt;Logo depois coloco a port no server, neste exemplo eu criei uma função, só para logar o numero da porta, logo nos logs do servidor estará o numero da porta, quando iniciar.&lt;/p&gt;

&lt;p&gt;Vamos agora começar a escrever as funcionalidades do servidor. Vamos escrever as funções que tratam que esta entrando e quem esta saindo da app.&lt;/p&gt;

&lt;p&gt;``` javascript Function Connected e Disconnected
var everyone = require(&amp;ldquo;now&amp;rdquo;).initialize(server);&lt;/p&gt;

&lt;p&gt;everyone.connected(function(){
  console.log(&amp;ldquo;Joined: &amp;ldquo; + this.now.name);
});&lt;/p&gt;

&lt;p&gt;everyone.disconnected(function(){
  console.log(&amp;ldquo;Left: &amp;ldquo; + this.now.name);
});&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
Nesta função, instancio o framework &#39;&amp;lt;a href=&amp;quot;http://www.nowjs.com/&amp;quot;&amp;gt;now&amp;lt;/a&amp;gt;&#39;, que voce pode esta instalando com o comando: npm install now

Dentro do &#39;&amp;lt;a href=&amp;quot;http://www.nowjs.com/&amp;quot;&amp;gt;now&amp;lt;/a&amp;gt;&#39;, temos 2 funções, a &amp;lt;a href=&amp;quot;http://www.nowjs.com/doc/symbols/nowjs#event:connect&amp;quot;&amp;gt;connected&amp;lt;/a&amp;gt; e a &amp;lt;a href=&amp;quot;http://www.nowjs.com/doc/symbols/nowjs#event:disconnect&amp;quot;&amp;gt;disconnected&amp;lt;/a&amp;gt;, nessas funções, estou registrando quem esta se logando e quem esta saindo da aplicação.

Agora vem a parte legal, vamos criar em modo de execução 2 funções, só que uma dentro da outra, ou seja, vamos usar fortemente o conceito de &amp;lt;a href=&amp;quot;http://lucastex.com.br/2009/10/21/nao-tenha-medo-das-closures/&amp;quot;&amp;gt;closure&amp;lt;/a&amp;gt;, mas por favor, não tenha medo disso, parece estranho no inicio, mas acredite o trem é legal...

``` javascript Criando Funções dentro de Funções
everyone.now.distributeMessage = function(message){
	console.log(&amp;quot;mensagem &amp;quot;+message);
	message = message.replace(/(&amp;lt;([^&amp;gt;]+)&amp;gt;)/ig,&amp;quot;&amp;quot;);
	everyone.now.receiveMessage(this.now.name, message);
};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Neste bloco de codigos, estamos criando a função distributeMessage, que esta, receberá a mensagem.&lt;/p&gt;

&lt;p&gt;Na linha 2, estou somente logando a mensagem que chegou.&lt;/p&gt;

&lt;p&gt;Na liinha 3, estamos tratando com uma expressão regular, a mensagem que chega, para que ninguem possa trollar a app com codigo de javascript, e outras coisas&amp;hellip;&lt;/p&gt;

&lt;p&gt;Na linha 4, estamos fazendo a chamada da função que esta na view, e ela que imprimi a mensagem no DOM.&lt;/p&gt;

&lt;p&gt;Logo o arquivo do helloword_server.js precisa ficar assim:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Criando a View&lt;/h3&gt;

&lt;p&gt;A nossa view, será basicamente HTML, e um pouco de simples javascript, então, dessa vez será 0 de explicação.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Proximo, passo, só levantar o servidor:
{% codeblock Levantando o Servidor %}
node helloworld_server.js
{% endcodeblock %}&lt;/p&gt;

&lt;p&gt;É isso ai amigos, segue o lick de como a aplicação ficou no heroku, e o lick do repositorio dela no github.&lt;/p&gt;

&lt;p&gt;Heroku -&amp;gt; &lt;a href=&#34;http://nodechat.herokuapp.com&#34;&gt;nodechat.herokuapp.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Github -&amp;gt; &lt;a href=&#34;https://github.com/rrmartins/node_chat&#34;&gt;Node Chat&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Até a proxima..&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
