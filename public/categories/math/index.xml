<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Math on Rodrigo Martins </title>
      <generator uri="https://gohugo.io">Hugo</generator>
    <link>https://limitless-eyrie-46143.herokuapp.com/categories/math/</link>
    <language>en-us</language>
    
    <copyright>I&#39;m a Catholic Christian, software developer, Passionate about life, codes, questions, theories and theorems. :)</copyright>
    <updated>Wed, 23 May 2012 00:00:00 UTC</updated>
    
    <item>
      <title>aexpressoes e operadores o inicio</title>
      <link>https://limitless-eyrie-46143.herokuapp.com/post/2012/05/23/aexpressoes-e-operadores-o-inicio/</link>
      <pubDate>Wed, 23 May 2012 00:00:00 UTC</pubDate>
      
      <guid>https://limitless-eyrie-46143.herokuapp.com/post/2012/05/23/aexpressoes-e-operadores-o-inicio/</guid>
      <description>&lt;p&gt;Hoje vamos continuar falando de &lt;a href=&#34;http://www.ruby-doc.org/core-1.9.2/&#34;&gt;Ruby&lt;/a&gt;, é hora de nos aprofundar falando um pouco de Expressões e Operadores&lt;/p&gt;

&lt;h1&gt;Expressões e Operadores&lt;/h1&gt;

&lt;p&gt;Uma expressão é um pedaço de código Ruby que o interpretador Ruby pode avaliar para produzir um valor. Aqui estão alguns exemplos
de expressões:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ruby Expressões
2 # Um literal numérico
x # Uma referência variável local
Math.sqrt(2) # invocação Um método
x = Math.sqrt(2) # Atribuição
x * x # Multiplicação com o operador *
&lt;/code&gt;
Como você pode ver, expressões primárias, tal como literais, referências variáveis, e invocações de método podem ser combinadas em
expressões maiores com operadores, tais como o operador de atribuição e o operador de multiplicação.&lt;/p&gt;

&lt;p&gt;Muitas linguagens de programação diferenciam entre expressões de baixo nível e alto nível de declarações, tais como condicionais e loops.
Nestas linguagens, as declarações de controlar o fluxo de um programa, mas eles não têm valores. Eles são executados, em vez de avaliados.
Em Ruby, não há distinção clara entre as afirmações e expressões; tudo em Ruby, incluindo a definição de classe e de método, pode ser
avaliado como uma expressão e retorna um valor. É ainda útil, no entanto, diferenciam sintaxe normalmente usada como expressões de sintaxe
tipicamente usadas ​​como indicações.&lt;/p&gt;

&lt;p&gt;Até mais amigos.. ainda vem muito conteudo legal com por ai.. :D&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
